kind: pipeline
type: docker
name: account-service-PROD
steps:
  - name: 编译打包代码
    image: maven:3-jdk-10
    volumes:
      - name : mvncache
        path : /root/.m2
    commands:
      - echo 'start to compile and package'
      - cd  ./service
      - mvn clean package -DskipTests=true -Dmaven.javadoc.skip=true -B
  - name: 构建镜像&PUSH镜像到Hub（PROD）.
    image: plugins/docker
    settings:
      dockerfile: ./release/Dockerfile
      use_cache: true
      repo: ccr.ccs.tencentyun.com/windwithlife/account-service
      registry: https://ccr.ccs.tencentyun.com
      mirror: https://89cgb0wn.mirror.aliyuncs.com
      username: 100008098144
      password: password7&
      # 更多变量参考https://docs.drone.io/pipeline/environment/reference/
      tags:
        - ${DRONE_TAG=latest}
        - build-${DRONE_BUILD_NUMBER}      

  - name: 部署到集群-dron8s方式(PROD)
    image: bh90210/dron8s:latest
    settings:
      yaml: ./release/deployment.yaml
      kubeconfig:
        from_secret: kubeconfig-prod
      app_name: account-service
      path_name: /account-service
      image_name: ccr.ccs.tencentyun.com/windwithlife/account-service
      soa_gateway: api.zhangyongqiao.com
      soa_gateway_cert: api-default-secret
      build_tag: build-${DRONE_BUILD_NUMBER}
volumes:
  - name: mvncache
    host:
      path: /var/lib/cache/.m2
trigger:
  branch:
    - master
  event:
    - push

---
kind: pipeline
type: docker
name: account-service-UAT

steps:
  - name: 编译打包代码
    image: maven:3-jdk-10
    volumes:
      - name : mvncache
        path : /root/.m2
    commands:
      - echo 'start to compile and package'
      - cd  ./service
      - mvn clean package -DskipTests=true -Dmaven.javadoc.skip=true -B

  - name: 构建镜像&PUSH镜像到Hub(UAT).
    image: plugins/docker
    settings:
      dockerfile: ./release/Dockerfile
      use_cache: true
      repo: ccr.ccs.tencentyun.com/windwithlife/account-service
      registry: https://ccr.ccs.tencentyun.com/
      mirror: https://89cgb0wn.mirror.aliyuncs.com
      username: 100008098144
      password: password7&
      # 更多变量参考https://docs.drone.io/pipeline/environment/reference/
      tags:
        - ${DRONE_TAG=latest}
        - build-${DRONE_BUILD_NUMBER}

  - name: 部署到集群-(UAT)
    image: bh90210/dron8s:latest
    settings:
      yaml: ./release/deployment.yaml
      kubeconfig:
        from_secret: kubeconfig-uat
      app_name: account-service
      path_name: /account-service
      image_name: ccr.ccs.tencentyun.com/windwithlife/account-service
      soa_gateway: api.xkoudai.com
      soa_gateway_cert: api-default-secret
      build_tag: build-${DRONE_BUILD_NUMBER}

volumes:
  - name: mvncache
    host:
      path: /var/lib/cache/.m2

trigger:
  branch:
    - uat
  event:
    - push

---
kind: pipeline
type: docker
name: account-service-iot


steps:
  - name: 编译打包代码
    image: maven:3-jdk-10
    volumes:
      - name : mvncache
        path : /root/.m2
    commands:
      - echo 'start to compile and package'
      - cd  ./service
      - mvn clean package -DskipTests=true -Dmaven.javadoc.skip=true -B

  - name: 构建镜像&PUSH镜像到Hub（PROD）.
    image: plugins/docker
    settings:
      dockerfile: ./release/smart-iot/Dockerfile
      use_cache: true
      repo: ccr.ccs.tencentyun.com/windwithlife/account-service
      registry: https://ccr.ccs.tencentyun.com
      mirror: https://89cgb0wn.mirror.aliyuncs.com
      username: 100008098144
      password: password7&
      # 更多变量参考https://docs.drone.io/pipeline/environment/reference/
      tags:
        - ${DRONE_TAG=latest}
        - build-${DRONE_BUILD_NUMBER}      

  - name: 部署到集群-dron8s方式(PROD)
    image: bh90210/dron8s:latest
    settings:
      yaml: ./release/smart-iot/deployment.yaml
      kubeconfig:
        from_secret: kubeconfig-iot
      app_name: account-service
      image_name: ccr.ccs.tencentyun.com/windwithlife/account-service
      soa_gateway: api.koudaibook.com
      soa_gateway_cert: api-default-secret
      path_name: /account-service
      build_tag: build-${DRONE_BUILD_NUMBER}
volumes:
  - name: mvncache
    host:
      path: /var/lib/cache/.m2

trigger:
  branch:
    - smart-iot
  event:
    - push    
